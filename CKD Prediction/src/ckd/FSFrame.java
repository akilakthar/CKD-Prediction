/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ckd;

import java.io.File;
import weka.core.Instances;
import weka.core.converters.CSVLoader;
import weka.classifiers.functions.MultilayerPerceptron;
import weka.classifiers.lazy.IBk;
import weka.classifiers.trees.RandomTree;
import weka.classifiers.functions.Logistic;
import weka.classifiers.trees.J48;
import weka.classifiers.functions.SMO;
import weka.classifiers.Classifier;
import java.util.ArrayList;
/**
 *
 * @author 91790
 */
public class FSFrame extends javax.swing.JFrame {

    /**
     * Creates new form FSFrame
     */
    Details dt= new Details();
    
    public FSFrame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea2 = new javax.swing.JTextArea();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTextArea3 = new javax.swing.JTextArea();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setFont(new java.awt.Font("Baskerville Old Face", 0, 34)); // NOI18N
        jLabel1.setText("Feature Selection");

        jTextArea1.setEditable(false);
        jTextArea1.setColumns(20);
        jTextArea1.setFont(new java.awt.Font("Monospaced", 0, 15)); // NOI18N
        jTextArea1.setRows(5);
        jTextArea1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Filter Method", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Baskerville Old Face", 0, 18))); // NOI18N
        jScrollPane1.setViewportView(jTextArea1);

        jTextArea2.setEditable(false);
        jTextArea2.setColumns(20);
        jTextArea2.setFont(new java.awt.Font("Monospaced", 0, 15)); // NOI18N
        jTextArea2.setRows(5);
        jTextArea2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Wrapper Method", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Baskerville Old Face", 0, 18))); // NOI18N
        jScrollPane2.setViewportView(jTextArea2);

        jTextArea3.setEditable(false);
        jTextArea3.setColumns(20);
        jTextArea3.setFont(new java.awt.Font("Monospaced", 0, 15)); // NOI18N
        jTextArea3.setRows(5);
        jTextArea3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Embeded Method", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Baskerville Old Face", 0, 18))); // NOI18N
        jScrollPane3.setViewportView(jTextArea3);

        jButton1.setFont(new java.awt.Font("Baskerville Old Face", 0, 18)); // NOI18N
        jButton1.setText("Classification");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(300, 300, 300)
                        .addComponent(jLabel1))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(34, 34, 34)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(34, 34, 34)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(34, 34, 34)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(420, 420, 420)
                        .addComponent(jButton1)))
                .addContainerGap(38, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(jLabel1)
                .addGap(45, 45, 45)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 324, Short.MAX_VALUE)
                    .addComponent(jScrollPane1)
                    .addComponent(jScrollPane2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 28, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addGap(20, 20, 20))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        try
        {
            CSVLoader csv=new CSVLoader();
            csv.setSource(new File(dt.input));			
            Instances data=csv.getDataSet();
            
            Classifier cls[]={new MultilayerPerceptron(), new J48(), new Logistic(),new SMO(),new IBk(),new RandomTree()};
            Classification cs=new Classification();
            String alg[]={"ANN","C4.5","Logistic","SVM","KNN","RandomTree"};
            
            System.out.println("Performance with All Features");
            String res="Performance with All Features\n";
            ArrayList full=new ArrayList();
            for(int i=0;i<cls.length;i++)
            {
                String e1=cs.classify(data, cls[i]);
                System.out.println(alg[i]+" : "+e1);
                full.add(e1);
                res=res+alg[i]+"\n\t";
                String e2[]=e1.split("#");
                res=res+"Precision = "+e2[0]+"\n\t";
                res=res+"Recall = "+e2[1]+"\n\t";
                res=res+"F-Measure = "+e2[2]+"\n\t";
                res=res+"Accuracy = "+e2[3]+"\n\t";
                res=res+"\n\t"+e2[4]+"\n\n";
            }
            
            cs.graph1(full, "Performance with All Features");
            
            System.out.println("Performance with Filter FS");
            res=res+"-----------------------------------\n";
            res=res+"Performance with Filter FS\n";
            
            ArrayList filter=new ArrayList();
            for(int i=0;i<cls.length;i++)
            {
                String e1=cs.classify(dt.fil_inst, cls[i]);
                System.out.println(alg[i]+" : "+e1);
                filter.add(e1);
                
                res=res+alg[i]+"\n\t";
                String e2[]=e1.split("#");
                res=res+"Precision = "+e2[0]+"\n\t";
                res=res+"Recall = "+e2[1]+"\n\t";
                res=res+"F-Measure = "+e2[2]+"\n\t";
                res=res+"Accuracy = "+e2[3]+"\n\t";
                res=res+"\n\t"+e2[4]+"\n\n";
            }
            cs.graph1(filter, "Performance with Filter FS");
            
            System.out.println("Performance with Wrapper FS");
            res=res+"-----------------------------------\n";
            res=res+"Performance with Wrapper FS\n";
            ArrayList wrap=new ArrayList();
            for(int i=0;i<cls.length;i++)
            {
                String e1=cs.classify(dt.wrap_inst, cls[i]);
                System.out.println(alg[i]+" : "+e1);
                wrap.add(e1);
                
                res=res+alg[i]+"\n\t";
                String e2[]=e1.split("#");
                res=res+"Precision = "+e2[0]+"\n\t";
                res=res+"Recall = "+e2[1]+"\n\t";
                res=res+"F-Measure = "+e2[2]+"\n\t";
                res=res+"Accuracy = "+e2[3]+"\n\t";
                res=res+"\n\t"+e2[4]+"\n\n";
            }
            
            cs.graph1(wrap, "Performance with Wrapper FS");
            
            System.out.println("Performance with Embedded FS");
            res=res+"Performance with Embedded FS\n";
            res=res+"-----------------------------------\n";
            ArrayList em=new ArrayList();
            for(int i=0;i<cls.length;i++)
            {
                String e1=cs.classify(dt.em_inst, cls[i]);
                System.out.println(alg[i]+" : "+e1);
                em.add(e1);
                res=res+alg[i]+"\n\t";
                String e2[]=e1.split("#");
                res=res+"Precision = "+e2[0]+"\n\t";
                res=res+"Recall = "+e2[1]+"\n\t";
                res=res+"F-Measure = "+e2[2]+"\n\t";
                res=res+"Accuracy = "+e2[3]+"\n\t";
                res=res+"\n\t"+e2[4]+"\n\n";
            }
            
            cs.graph1(em, "Performance with Embedded FS");
            
            
            ResultFrame rf=new ResultFrame();
            rf.setVisible(true);
            rf.setResizable(false);
            rf.setTitle("Result");
            rf.jTextArea1.setText(res);
        }
        catch(Exception e)
        {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FSFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FSFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FSFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FSFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FSFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    public javax.swing.JTextArea jTextArea1;
    public javax.swing.JTextArea jTextArea2;
    public javax.swing.JTextArea jTextArea3;
    // End of variables declaration//GEN-END:variables
}
